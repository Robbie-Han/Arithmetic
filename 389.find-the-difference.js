/*
 * @lc app=leetcode id=389 lang=javascript
 *
 * [389] Find the Difference
 *
 * https://leetcode.com/problems/find-the-difference/description/
 *
 * algorithms
 * Easy (53.21%)
 * Total Accepted:    153.3K
 * Total Submissions: 286.7K
 * Testcase Example:  '"abcd"\n"abcde"'
 *
 * 
 * Given two strings s and t which consist of only lowercase letters.
 * 
 * String t is generated by random shuffling string s and then add one more
 * letter at a random position.
 * 
 * Find the letter that was added in t.
 * 
 * Example:
 * 
 * Input:
 * s = "abcd"
 * t = "abcde"
 * 
 * Output:
 * e
 * 
 * Explanation:
 * 'e' is the letter that was added.
 * 
 */
/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
// 通过遍历整个字符串，异或取得最后的值
/* var findTheDifference = function(s, t) {
    let combineString = s + t;
    if(combineString.length <= 1) return combineString;
    const arr = combineString.split('');
    const value = arr.reduce((acc, item) => typeof acc === 'string' 
                ? acc.charCodeAt() ^ item.charCodeAt()
                : acc ^ item.charCodeAt());
    return String.fromCharCode(value);
}; */
// 遍历求和得出s和t的差值
/* var findTheDifference = function(s, t) {
    let sValue = 0, tValue = 0;
    for(let item of s) {
      sValue += item.charCodeAt();
    }
    for(let item of t) {
      tValue += item.charCodeAt();
    }
    return String.fromCharCode(tValue - sValue);
} */
//保存字符串和字符串的个数到对象里，然后比较，值不相同的输出
var findTheDifference = function(s, t) {
    let tObj = {};
    let sObj = {};
    for(let item of s) {
      if(sObj[item]) {
        sObj[item] += 1;
      }else {
        sObj[item] = 1;
      }
    }
    for(let item of t) {
      if(tObj[item]) {
        tObj[item] += 1;
      }else {
        tObj[item] = 1;
      }
    }
    for(let key in tObj) {
      if(tObj[key]!== sObj[key]) {
        return key
      }
    }
}


